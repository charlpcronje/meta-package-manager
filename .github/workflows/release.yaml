---
name: Build & release
"on":
  # Target are chosen so that all commits get a chance to have their build tested.
  push:
    branches:
      - main
  pull_request:

jobs:

  release:
    uses: kdeldycke/workflows/.github/workflows/release.yaml@v1.10.0
    secrets:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

  nuitka-generate-bins:
    name: Generate binaries
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - macos-12
          - windows-2022
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-python@v4.3.0
        with:
          # XXX Nuitka is not ready for Python 3.11 yet.
          python-version: "3.10"
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
      - name: Install poetry
        run: |
          python -m pip install Poetry
      - name: Install package
        run: |
          poetry install --no-interaction --no-ansi
      - name: Install Nuitka in Poetry venv
        # Additional dependencies:
        #   - ordered-set: used by Nuitka for compilation performance
        #   - zstandard: for nuitka's onefile compression
        run: |
          poetry run python -m pip install nuitka ordered-set zstandard
      - name: Nuitka and compilers versions
        run: |
          poetry run python -m nuitka --version
      - name: Build binary within Poetry venv
        # XXX Workaround for Windows runners redirecting the output of commands to files. See:
        # https://github.com/databrickslabs/dbx/issues/455#issuecomment-1312770919
        # https://github.com/pallets/click/issues/2121#issuecomment-1312773882
        # https://gist.github.com/NodeJSmith/e7e37f2d3f162456869f015f842bcf15
        # Nuitka will gather any extra environment variable and pass them to the Python interpreter that will
        # end up embedded in the final binary (as describe by the --python-flag=FLAG option).
        env:
          PYTHONIOENCODING: "utf8"
        run: >
          poetry run python -m nuitka
          --standalone --onefile --assume-yes-for-downloads
          --output-dir=./dist/
          --include-package-data=lark
          --nofollow-import-to=*.tests
          meta_package_manager/__main__.py
      - name: Upload binary
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ runner.os }} binary build
          path: |
            ./dist/*.exe
            ./dist/*.bin
            ./dist/*.app/**/*
      - name: Linux and macOS binary tests
        if: runner.os != 'Windows'
        run: |
          ./dist/__main__.bin --version
          ./dist/__main__.bin --help
          ./dist/__main__.bin --all-managers managers
      - name: Windows binary tests
        if: runner.os == 'Windows'
        run: |
          ./dist/__main__.exe --version
          ./dist/__main__.exe --help
          ./dist/__main__.exe --all-managers managers
